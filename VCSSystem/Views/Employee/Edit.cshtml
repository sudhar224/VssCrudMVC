@model VCSSystem.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <td>
            <img src="@Url.Content(Model.Photo)" width="80" height="80" />
        </td>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger" id="emailError"></span>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DOB, new { @type = "date", @class = "form-control mb-1", Value = Model.DOB.ToString("yyyy-MM-dd") })
                <span class="text-danger" id="dobError"></span>
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" id="ImageFile" alt="EmployeeImage" class="form-control" />
                <span class="text-danger" id="fileError"></span>
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Email validation regex
            const emailPattern = /^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$/;
            // Allowed image extensions
            const allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;

            // Validate email field on change
            $('#Email').on('input', function () {
                const email = $(this).val();
                if (emailPattern.test(email)) {
                    $('#emailError').text(''); // Clear error message if valid
                } else {
                    $('#emailError').text('Please enter a valid email address.');
                }
            });

            // DOB validation to ensure date is in the past
            $('#DOB').on('change', function () {
                const dob = new Date($(this).val());
                const today = new Date();

                if (dob >= today) {
                    $('#dobError').text('Date of Birth must be in the past.');
                } else {
                    $('#dobError').text(''); // Clear error message if valid
                }
            });

            // Image file validation
            $('#ImageFile').on('change', function () {
                const filePath = $(this).val();
                if (!allowedExtensions.exec(filePath)) {
                    $('#fileError').text('Only .jpg, .jpeg, and .png files are allowed.');
                    $(this).val(''); // Clear the file input if invalid
                } else {
                    $('#fileError').text(''); // Clear error message if valid
                }
            });

            // Validate form before submission
            $('form').on('submit', function (e) {
                const email = $('#Email').val();
                const dob = new Date($('#DOB').val());
                const today = new Date();
                const filePath = $('#ImageFile').val();
                let isValid = true;

                if (!emailPattern.test(email)) {
                    $('#emailError').text('Please enter a valid email address.');
                    isValid = false;
                }

                if (dob >= today) {
                    $('#dobError').text('Date of Birth must be in the past.');
                    isValid = false;
                }

                if (!allowedExtensions.exec(filePath) && filePath) {
                    $('#fileError').text('Only .jpg, .jpeg, and .png files are allowed.');
                    isValid = false;
                }

                if (!isValid) {
                    e.preventDefault(); // Prevent form submission if validation fails
                }
            });
        });
    </script>
}
