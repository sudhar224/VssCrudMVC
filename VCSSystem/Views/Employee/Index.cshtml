@model VCSSystem.Models.EmployeeViewModel

@{
    ViewBag.Title = "Employee Management";
}

<h3>Add Employee</h3>
@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group row">
            @Html.LabelFor(model => model.NewEmployee.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewEmployee.Name, new { htmlAttributes = new { @class = "form-control mb-1" } })
                @Html.ValidationMessageFor(model => model.NewEmployee.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewEmployee.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewEmployee.Email, new { htmlAttributes = new { @id = "Email", @class = "form-control mb-1" } })
                <span class="text-danger" id="emailError"></span>
                @Html.ValidationMessageFor(model => model.NewEmployee.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewEmployee.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.NewEmployee.DOB, new { @type = "date", @id = "DOB", @class = "form-control mb-1" })
                <span class="text-danger" id="dobError"></span>
                @Html.ValidationMessageFor(model => model.NewEmployee.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.NewEmployee.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="NewEmployee.ImageFile" id="ImageFile" alt="Employee Image" class="form-control" />
                <span class="text-danger" id="fileError"></span>
                @Html.ValidationMessageFor(model => model.NewEmployee.ImageFile, "", new { @class = "text-danger" })
            </div>

            <div class="mt-2">
                <img id="imagePreview" src="#" alt="Image Preview" style="display:none; max-width: 150px; max-height: 150px; border: 1px solid #ddd; padding: 5px;" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-offset-2 col-md-10 mt-2">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<hr />

<h3>Employee List</h3>
<table class="table">
    <tr>
        <th>Name</th>
        <th>Email</th>
        <th>Date of Birth</th>
        <th>Photo</th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model.EmployeeList)
    {
        <tr>
            <td>@item.Name</td>
            <td>@item.Email</td>
            <td>@item.DOB.ToShortDateString()</td>
            <td>
                <img src="@Url.Content(item.Photo)"
                     onerror="this.onerror=null; this.outerHTML = '<span>' + this.alt + '</span>';"
                     alt="No photo "  width="80" height="80" />                
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            const emailPattern = /^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$/;

            const allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;


            $('#Email').on('input', function () {
                const email = $(this).val();
                if (emailPattern.test(email)) {
                    $('#emailError').text('');
                } else {
                    $('#emailError').text('Please enter a valid email address.');
                }
            });


            $('#DOB').on('change', function () {
                const dob = new Date($(this).val());
                const today = new Date();

                if (dob >= today) {
                    $('#dobError').text('Date of Birth must be in the past.');
                } else {
                    $('#dobError').text('');
                }
            });


            $('#ImageFile').on('change', function () {
                const filePath = $(this).val();
                if (!allowedExtensions.exec(filePath)) {
                    $('#fileError').text('Only .jpg, .jpeg, and .png files are allowed.');
                    $(this).val('');
                } else {
                    $('#fileError').text('');
                }
            });

            $('#ImageFile').on('change', function () {
                const file = this.files[0];
                const allowedExtensions = /(\.jpg|\.jpeg|\.png)$/i;
                const fileError = $('#fileError');
                const imagePreview = $('#imagePreview');

                if (file) {
                    const filePath = $(this).val();
                    if (!allowedExtensions.exec(filePath)) {
                        fileError.text('Only .jpg, .jpeg, and .png files are allowed.');
                        $(this).val('');
                        imagePreview.hide(); // Hide the preview if invalid file
                    } else {
                        fileError.text('');

                        // Read the file and set it to the preview img tag
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            imagePreview.attr('src', e.target.result).show();
                        };
                        reader.readAsDataURL(file);
                    }
                } else {
                    imagePreview.hide(); // Hide the preview if no file is selected
                }
            });


            $('form').on('submit', function (e) {
                const email = $('#Email').val();
                const dob = new Date($('#DOB').val());
                const today = new Date();
                const filePath = $('#ImageFile').val();
                let isValid = true;

                if (!emailPattern.test(email)) {
                    $('#emailError').text('Please enter a valid email address.');
                    isValid = false;
                }

                if (dob >= today) {
                    $('#dobError').text('Date of Birth must be in the past.');
                    isValid = false;
                }

                if (!allowedExtensions.exec(filePath) && filePath) {
                    $('#fileError').text('Only .jpg, .jpeg, and .png files are allowed.');
                    isValid = false;
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });

            
        });
    </script>
   
}